version: '3.8'

services:
  # SearXNG Core Service
  searxng:
    image: searxng/searxng:latest
    container_name: searxng-convivial
    restart: unless-stopped
    environment:
      - SEARXNG_BASE_URL=https://${SEARXNG_HOSTNAME:-localhost}/
      - SEARXNG_SECRET_KEY=${SEARXNG_SECRET_KEY}
      - SEARXNG_BIND_ADDRESS=0.0.0.0:8080
    volumes:
      - ./searxng:/etc/searxng:rw
      - ./plugins:/usr/local/searxng/searx/plugins/custom:ro
      - ./themes:/usr/local/searxng/searx/static/themes/custom:ro
    networks:
      - searxng
    depends_on:
      - redis-cache
      - redis-pubsub
      - postgres
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache Instance
  redis-cache:
    image: redis:7-alpine
    container_name: searxng-redis-cache
    restart: unless-stopped
    command: redis-server --port 6379 --save 60 1 --loglevel warning
    volumes:
      - redis-cache-data:/data
    networks:
      - searxng
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID

  # Redis Pub/Sub Instance
  redis-pubsub:
    image: redis:7-alpine
    container_name: searxng-redis-pubsub
    restart: unless-stopped
    command: redis-server --port 6380
    networks:
      - searxng
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: searxng-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=searxng_convivial
      - POSTGRES_USER=searxng
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d:ro
    networks:
      - searxng
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U searxng"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js WebSocket Server
  websocket-server:
    build: ./websocket-server
    container_name: searxng-websocket
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REDIS_PUBSUB_HOST=redis-pubsub
      - REDIS_PUBSUB_PORT=6380
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=searxng_convivial
      - POSTGRES_USER=searxng
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - searxng
    depends_on:
      - redis-pubsub
      - postgres

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: searxng-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      - searxng
    depends_on:
      - searxng
      - websocket-server

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: searxng-certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw

volumes:
  redis-cache-data:
  postgres-data:

networks:
  searxng:
    driver: bridge